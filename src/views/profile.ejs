<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Profile</title>
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
  <link rel="manifest" href="/site.webmanifest" />
  <meta name="twitter:creator" content="@yourtwitterhandle" />
  <!-- Bootstrap CSS CDN -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet" />
  <!-- Font Awesome for icons -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
  <style>
    body {
      background-color: #f5f8fa;
      font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    }

    .profile-card {
      background-color: white;
      border-radius: 15px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      transition: transform 0.3s ease;
    }

    .profile-card:hover {
      transform: translateY(-5px);
    }

    .profile-cover {
      height: 180px;
      background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
      position: relative;
    }

    .profile-avatar {
      width: 150px;
      height: 150px;
      border-radius: 50%;
      border: 5px solid white;
      position: absolute;
      bottom: -75px;
      left: 50%;
      transform: translateX(-50%);
      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
    }

    .profile-info {
      margin-top: 85px;
      text-align: center;
      padding: 20px 30px 30px;
    }

    .profile-name {
      margin-bottom: 5px;
      font-weight: 700;
      color: #333;
    }

    .profile-title {
      color: #6c757d;
      margin-bottom: 15px;
    }

    .profile-bio {
      color: #495057;
      margin-bottom: 25px;
    }

    .profile-stats {
      display: flex;
      justify-content: space-around;
      margin-bottom: 25px;
      padding: 15px 0;
      border-top: 1px solid #eee;
      border-bottom: 1px solid #eee;
    }

    .stat-item {
      text-align: center;
    }

    .stat-value {
      font-weight: 700;
      font-size: 20px;
      color: #333;
    }

    .stat-label {
      font-size: 14px;
      color: #6c757d;
    }

    .social-links {
      margin-bottom: 25px;
    }

    .social-links a {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      color: white;
      background-color: #6c757d;
      margin: 0 5px;
      transition: all 0.3s ease;
      text-decoration: none;
    }

    .social-links a:hover {
      transform: scale(1.1);
    }

    .social-twitter {
      background-color: #1da1f2;
    }

    .social-linkedin {
      background-color: #0077b5;
    }

    .social-github {
      background-color: #333;
    }

    .social-instagram {
      background-color: #e1306c;
    }

    .profile-actions .btn {
      padding: 8px 25px;
      border-radius: 50px;
      transition: all 0.3s ease;
    }

    .btn-message {
      color: white;
      background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
      border: none;
    }

    .btn-message:hover {
      background: linear-gradient(135deg, #5910a8 0%, #1e60d3 100%);
      transform: translateY(-2px);
    }

    .btn-connect {
      border: 2px solid #6a11cb;
      color: #6a11cb;
    }

    .btn-connect:hover {
      background-color: #6a11cb;
      color: white;
    }

    .skills-container {
      margin-top: 25px;
    }

    .skill-tag {
      display: inline-block;
      padding: 5px 15px;
      margin: 5px;
      border-radius: 50px;
      background-color: #e9ecef;
      color: #495057;
      font-size: 14px;
      transition: all 0.3s ease;
    }

    .skill-tag:hover {
      background-color: #6a11cb;
      color: white;
      transform: translateY(-2px);
    }

    .tab-content {
      padding: 20px 0;
    }

    .tab-pane {
      animation: fadeIn 0.5s ease;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .activity-item {
      margin-bottom: 15px;
      padding-bottom: 15px;
      border-bottom: 1px solid #eee;
    }

    .activity-icon {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
      margin-right: 15px;
    }

    .activity-content {
      flex: 1;
    }

    .activity-time {
      font-size: 12px;
      color: #6c757d;
    }

    .edit-profile {
      position: absolute;
      top: 15px;
      right: 15px;
      background-color: rgba(255, 255, 255, 0.9);
      border-radius: 50%;
      width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: #333;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .edit-profile:hover {
      background-color: white;
      transform: scale(1.1);
    }
  </style>
</head>

<body>
  <%-include("navbar")-%>
    <script>
      // const token = localStorage.getItem("token");
      if (!token) {
        window.location.href = "/login";
      }
      let data = {};
      const fetchProfileData = async () => {
        try {
          const response = await fetch("/api/profile", {
            method: "GET",
            headers: {
              "Content-Type": "application/json",
              "Authorization": `Bearer ${token}`,
            },
          });
          if (response.ok) {
            data = await response.json();
            if (!localStorage.getItem("user")) {
              localStorage.setItem("user", data.user._id);
            }
            document.querySelector(".profile-name").textContent = data.user.name;
            document.querySelector("#profile-email").textContent = data.user.email;
            document.getElementById("profile-about").textContent = data.user.about;
            document.getElementById("profile-title").textContent = data.user.jobTitle; // Update profile title
            document.getElementById("profile-image").src = `/profile/${data.user.profileImage}`; // Update profile image

            document.getElementById("profileName").value = data.user.name;
            document.getElementById("profileEmail").value = data.user.email;
            document.getElementById("profileTitle").value = data.user.jobTitle;
            document.getElementById("profileBio").value = data.user.about;



          } else {
            throw new Error("Failed to fetch profile data");
          }
        } catch (error) {
          console.error(error);
          alert("Failed to fetch profile data");
        }
      }
      fetchProfileData();
    </script>
    <div class="container py-5" style="margin:5.5rem auto;">
      <div class="row justify-content-center">
        <div class="col-lg-8">
          <div class="profile-card mb-4">
            <div class="profile-cover">
              <div class="edit-profile" id="editProfileBtn">
                <i class="fas fa-pencil-alt"></i>
              </div>
              <img src="" alt="Profile Image" id="profile-image" class="profile-avatar" />
            </div>
            <div class="profile-info">
              <h3 class="profile-name"></h3>
              <h5 id="profile-title"></h5>
              <!-- email -->
              <p><i class="bi bi-envelope"></i> <span class="profile-email" id="profile-email"></span></p>
              </p>
              <p>
                <i class="bi bi-chat"></i>
                <span class="profile-email" id="profile-about"></span>
              </p>

            </div>



            <div class="tab-content px-4" id="profileTabsContent">
              <div class="tab-pane fade show active" id="activity" role="tabpanel" aria-labelledby="activity-tab">
                <div id="activity "></div>
              </div>
            </div>

          </div>
        </div>

        <!-- Edit Profile Modal -->
        <div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel"
          aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="editProfileModalLabel">
                  Edit Profile
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <form id="editProfileForm">
                  <div class="mb-3">
                    <label for="profileName" class="form-label">Name</label>
                    <input type="text" class="form-control" id="profileName" value="" />
                  </div>
                  <div class="mb-3">
                    <label for="profileTitle" class="form-label">Email I'D</label>
                    <input type="email" class="form-control" id="profileEmail" value="" readonly />
                  </div>
                  <div class="mb-3">
                    <label for="profileTitle" class="form-label">Job Title</label>
                    <input type="text" class="form-control" id="profileTitle" value="" />
                  </div>
                  <div class="mb-3">
                    <label for="profileBio" class="form-label">About</label>
                    <textarea class="form-control" id="profileBio" rows="3"></textarea>
                  </div>
                  <di class="mb-3">
                    <label for="coverImage" class="form-label mt-3">Cover Image</label>
                    <input type="file" class="form-control" id="coverImage" name="coverImage" accept="image/*" />

                    <div id="uploadedImage" style="margin: auto;">
                      <img src="" alt=""
                        style="width: 100%; height: auto;margin:auto; margin-top: 1rem; display: none;" />
                      <script>
                        document.getElementById("coverImage").addEventListener("change", (event) => {
                          const file = event.target.files[0];
                          const reader = new FileReader();
                          reader.onload = () => {
                            const img = document.createElement("img");
                            img.src = reader.result;
                            img.style.width = "40%";
                            img.style.height = "auto";
                            img.style.marginTop = "1rem";
                            img.style.display = "block";
                            document.getElementById("uploadedImage").appendChild(img);
                          };
                          reader.readAsDataURL(file);
                        });
                      </script>
                    </div>
              </div>
            </div>
            </form>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
              Cancel
            </button>
            <button type="button" class="btn btn-primary" id="saveProfileBtn">
              Save Changes
            </button>
          </div>
        </div>
      </div>
    </div>
    </div>
    </div>

    <!-- Bootstrap & jQuery -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

    <script>
      // Initialize Bootstrap components
      const tooltipTriggerList = [].slice.call(
        document.querySelectorAll('[data-bs-toggle="tooltip"]')
      );
      tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
      });

      // Profile edit functionality
      document
        .getElementById("editProfileBtn")
        .addEventListener("click", function () {
          const editProfileModal = new bootstrap.Modal(
            document.getElementById("editProfileModal")
          );
          editProfileModal.show();
        });

      document
        .getElementById("saveProfileBtn")
        .addEventListener("click", function () {
          // Get values from form
          const newName = document.getElementById("profileName").value;
          const newTitle = document.getElementById("profileTitle").value;
          const newBio = document.getElementById("profileBio").value;
          const newCoverImage = document.getElementById("coverImage").files[0];
          const formData = new FormData();
          formData.append("name", newName);
          formData.append("jobTitle", newTitle);
          formData.append("about", newBio);
          formData.append("profileImage", newCoverImage);
          const putUpdate = async () => {
            const response = await fetch("/api/profile", {
              method: "PUT",
              headers: {
                "format": "multipart/form-data",
                "Authorization": `Bearer ${localStorage.getItem("token")}`,
              },
              body: formData
            });
            const data = await response.json();
            console.log(data);
          }

          putUpdate();

          // Close the modal
          const editProfileModal = bootstrap.Modal.getInstance(
            document.getElementById("editProfileModal")
          );
          editProfileModal.hide();

          // Show a success message (could be enhanced with a toast notification)
          alert("Profile updated successfully!");

          // Optionally, redirect to the profile page after a short delay
          setTimeout(() => {
            window.location.href = "/page/profile";
          }, 1000); // 2000 ms = 2 seconds
        });
    </script>

    <%-include("footer")-%>
</body>

</html>